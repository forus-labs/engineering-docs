"use strict";(self.webpackChunkforus_labs_engineering_docs=self.webpackChunkforus_labs_engineering_docs||[]).push([[752],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(n),p=a,g=f["".concat(s,".").concat(p)]||f[p]||d[p]||l;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9496:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return f}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={id:"dart-flutter-style-guide",title:"Dart/Flutter Style Guide",sidebar_label:"Dart/Flutter Style Guide"},s=void 0,u={unversionedId:"style-guides/dart-flutter-style-guide",id:"style-guides/dart-flutter-style-guide",title:"Dart/Flutter Style Guide",description:"We follow Effective Dart's style guide and",source:"@site/docs/style-guides/dart-flutter-style-guide.md",sourceDirName:"style-guides",slug:"/style-guides/dart-flutter-style-guide",permalink:"/docs/style-guides/dart-flutter-style-guide",editUrl:"https://github.com/forus-labs/engineering-docs/docs/style-guides/dart-flutter-style-guide.md",tags:[],version:"current",frontMatter:{id:"dart-flutter-style-guide",title:"Dart/Flutter Style Guide",sidebar_label:"Dart/Flutter Style Guide"},sidebar:"main",previous:{title:"Pair Programming",permalink:"/docs/collaboration/pair-programming"},next:{title:"Further Reading",permalink:"/docs/further-reading"}},c=[{value:"Characters Line Limit.",id:"characters-line-limit",children:[],level:2},{value:"Avoid <code>null</code> Assertions",id:"avoid-null-assertions",children:[{value:"Calling a method of a nullable object",id:"calling-a-method-of-a-nullable-object",children:[],level:4},{value:"Assigning a nullable object to a non-nullable object",id:"assigning-a-nullable-object-to-a-non-nullable-object",children:[],level:4}],level:2}],d={toc:c};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"We follow Effective Dart's ",(0,l.kt)("a",{parentName:"p",href:"https://dart.dev/guides/language/effective-dart/style"},"style guide")," and\n",(0,l.kt)("a",{parentName:"p",href:"https://dart.dev/guides/language/effective-dart/documentation"},"documentation style guide"),". "),(0,l.kt)("h2",{id:"characters-line-limit"},"Characters Line Limit."),(0,l.kt)("p",null,"An exception to Effective Dart is the characters line limit. Instead of ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"80"))," characters, we adhere to a ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"120"))," characters line limit."),(0,l.kt)("h2",{id:"avoid-null-assertions"},"Avoid ",(0,l.kt)("inlineCode",{parentName:"h2"},"null")," Assertions"),(0,l.kt)("p",null,"Developers may be frustrated with converting nullable types to non-nullable types and forcefully convert a nullable type\nusing the null assertion operator. However, doing so comes with a loss of static safety. This is undesirable in most cases\nsince it circumvents the type system and is a potential source of bugs. Instead, the null-aware operator and checking if a\nvalue is null should be performed. "),(0,l.kt)("p",null,"The following section contains counterexamples and the recommended alternatives."),(0,l.kt)("h4",{id:"calling-a-method-of-a-nullable-object"},"Calling a method of a nullable object"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"// Bad\nString foo = NullableObject!.bar();\n\n// Good\nString? foo = NullableObject?.bar();\n\nString foo = NullableObject?.bar() ?? 'default value';\n")),(0,l.kt)("h4",{id:"assigning-a-nullable-object-to-a-non-nullable-object"},"Assigning a nullable object to a non-nullable object"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"// Bad\nString foo = bar!;\n\n// Good\nfinal foo = bar;\nif (foo == null) {\n  // Handle logic here\n}\n\n// foo is now non-nullable here\n")),(0,l.kt)("p",null,"One caveat is tests. In tests, it is acceptable to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," assertion operator. This is because the brevity and readability\nof tests outweighs the loss of static safety. Furthermore, tests are localized and are therefore easier to reason about."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://dart.dev/null-safety/understanding-null-safety"},"Dart null safety")," for more information."))}f.isMDXComponent=!0}}]);